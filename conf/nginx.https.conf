# Based on Mozilla SSL Configuration Generatorr
# This is using the 'intermediate' config, you may prefer 'modern'
# Check https://mozilla.github.io/server-side-tls/ssl-config-generator/ and update this file!

ssl_certificate /usr/local/nginx/ssl/localhost.crt;
ssl_certificate_key /usr/local/nginx/ssl/localhost.key;

ssl_session_timeout 1d;
ssl_session_cache shared:SSL:5m;
ssl_session_tickets off;

# Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
# Create this file with:
# openssl dhparam -out dhparam.pem 2048
#ssl_dhparam /etc/https/dhparam.pem;

ssl_protocols TLSv1.2;
ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
ssl_prefer_server_ciphers on;

# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
add_header Strict-Transport-Security "max-age=15768000; includeSubDomains" always;

# OCSP Stapling ---
# fetch OCSP records from URL in ssl_certificate and cache them
#ssl_stapling on;
#ssl_stapling_verify on;

## verify chain of trust of OCSP response using Root CA and Intermediate certs
#ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

# Use local DNS server
#resolver <IP of your DNS server>;
